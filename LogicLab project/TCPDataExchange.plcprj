<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plcProject caseSensitive="true" useCustomWorkspace="true" debugMode="false" extcheck="true" SFCControl="false" strictPointerCheck="true" copyWarningThreshold="200" version="2.2" useLD2="true" useFBMethods="false">
	<image>TCPDataExchange.imgx</image>
	<commSettings>ModbusTCP:255,1000,M#TCPIP:192.168.0.186/502,5000</commSettings>
	<sources>
		<main>
			<resources/>
			<tasks>
				<task name="Back">
					<program>ST_TCPDEClient</program>
					<program>ST_TCPDEServer</program>
				</task>
			</tasks>
			<globalVars>
				<group name="Ungrouped_Global_Vars">
					<var name="Di00CPU" type="BOOL">
						<descr>Input 00, CPU module</descr>
						<address type="I" typeVar="X" index="255" subIndex="0"/>
					</var>
					<var name="Di01CPU" type="BOOL">
						<descr>Input 01, CPU module</descr>
						<address type="I" typeVar="X" index="255" subIndex="1"/>
					</var>
					<var name="Do00CPU" type="BOOL">
						<descr>Output 00, CPU module</descr>
						<address type="Q" typeVar="X" index="255" subIndex="0"/>
					</var>
					<var name="Do01CPU" type="BOOL">
						<descr>Output 01, CPU module</descr>
						<address type="Q" typeVar="X" index="255" subIndex="1"/>
					</var>
				</group>
			</globalVars>
			<retainVars>
				<group name="Ungrouped_Global_Vars"/>
			</retainVars>
			<constantVars>
				<group name="Ungrouped_Global_Vars"/>
			</constantVars>
			<functions/>
			<functionBlocks/>
			<programs>
				<program name="ST_TCPDEClient" version="1.0.0">
					<vars>
						<localVars>
							<var name="TCPClient" type="TCPDataExchClient">
								<descr>TCP data exchange client</descr>
							</var>
							<var name="TxBuffer" type="BYTE" dim0="8">
								<descr>Tx buffer address</descr>
							</var>
							<var name="RxBuffer" type="BYTE" dim0="8">
								<descr>Rx buffer address</descr>
							</var>
							<var name="DiAcq" type="SysGetPhrDI">
								<descr>Digital input acquisition</descr>
							</var>
							<var name="DoMng" type="SysSetPhrDO">
								<descr>Digital output management</descr>
							</var>
							<var name="DEDefs" type="TCPDEXCHNODEDEFS">
								<descr>Data exchange node definitions</descr>
							</var>
						</localVars>
					</vars>
					<iecDeclaration valid="TRUE">
						<![CDATA[]]>
					</iecDeclaration>
					<sourceCode type="ST">
						<![CDATA[(* ************************************************************************** *)
(* PROGRAM "ST_TCPDEClient"                                                   *)
(* ************************************************************************** *)
(* Usage example of TCPDataExchClient function block.                         *)
(* -------------------------------------------------------------------------- *)

	(* ---------------------------------------------------------------------- *)
	(* INITIALIZATION                                                         *)
	(* ---------------------------------------------------------------------- *)
	(* Program initialization *)

	IF (SysFirstLoop) THEN

		(* Define the data exchange areas. *)

		DEDefs.NodeID:=1; (* Node ID *)
		DEDefs.AutoTxD:=TRUE; (* Auto TxD *)
		DEDefs.TxBuffer:=ADR(TxBuffer); (* Tx buffer address *)
		DEDefs.TxLength:=SIZEOF(TxBuffer); (* Tx buffer length *)
		DEDefs.RxBuffer:=ADR(RxBuffer); (* Rx buffer address *)
		DEDefs.RxLength:=SIZEOF(RxBuffer); (* Rx buffer length *)
		DEDefs.TxHeartbeat:=5; (* Heartbeat send time (S) *)

		TCPClient.Enable:=TRUE; (* Abilitazione gestione client *)
		TCPClient.SpyOn:=TRUE; (* Attivazione spionaggio *)
		(* TCPClient.SAddress:=ADR('www.elsist.it'); (* Address del server a cui connettersi *)
		TCPClient.SAddress:=ADR('192.168.0.181'); (* Address del server a cui connettersi *)
		TCPClient.SPort:=10000; (* Porta del server a cui connettersi *)
		TCPClient.DEDefs:=ADR(DEDefs); (* Data exchange definitions *)
	END_IF;

	(* ---------------------------------------------------------------------- *)
	(* GESTIONE DATA EXCHANGE CLIENT                                          *)
	(* ---------------------------------------------------------------------- *)
	(* Gestione data exchange client. *)

	TCPClient(); (* Eseguo gestione client *)

	(* ---------------------------------------------------------------------- *)
	(* ESEGUO APPOGGIO I/O                                                    *)
	(* ---------------------------------------------------------------------- *)
	(* Eseguo lettura ingressi logici. *)

	DiAcq.Address:=255; (* Module address *)
	DiAcq.Mode:=DI_8_LL; (* Acquisition mode *)
	DiAcq(); (* Digital input acquisition *)
	TxBuffer[0]:=TO_BYTE(DiAcq.Value); (* Digital input value *)

	(* Eseguo gestione uscite logiche. *)

	DoMng.Address:=255; (* Module address *)
	DoMng.Mode:=DO_8_LL; (* Management mode *)
	DoMng.Value:=RxBuffer[0]; (* Digital ouput value *)
	DoMng.Mask:=16#00000000; (* Output mask *)
	DoMng(); (* Digital output management *)

(* [End of file] *)
]]>
					</sourceCode>
				</program>
				<program name="ST_TCPDEServer" version="1.0.0">
					<vars>
						<localVars>
							<var name="TCPServer" type="TCPDataExchServer">
								<descr>TCP data exchange server</descr>
							</var>
							<var name="DoMng" type="SysSetPhrDO">
								<descr>Digital output management</descr>
							</var>
							<var name="DiAcq" type="SysGetPhrDI">
								<descr>Digital input acquisition</descr>
							</var>
							<var name="DEDefs" type="TCPDEXCHNODEDEFS" dim0="2">
								<descr>Data exchange node definitions</descr>
							</var>
							<var name="C2TxBuffer" type="BYTE" dim0="8">
								<descr>Tx buffer (Client 2)</descr>
							</var>
							<var name="C2RxBuffer" type="BYTE" dim0="8">
								<descr>Rx buffer (Client 2)</descr>
							</var>
							<var name="C1TxBuffer" type="BYTE" dim0="8">
								<descr>Tx buffer (Client 1)</descr>
							</var>
							<var name="C1RxBuffer" type="BYTE" dim0="8">
								<descr>Rx buffer (Client 1)</descr>
							</var>
						</localVars>
					</vars>
					<iecDeclaration valid="TRUE">
						<![CDATA[]]>
					</iecDeclaration>
					<sourceCode type="ST">
						<![CDATA[(* ************************************************************************** *)
(* PROGRAM "ST_TCPDEServer"                                                   *)
(* ************************************************************************** *)
(* Usage example of TCPDataExchServer function block.                         *)
(* -------------------------------------------------------------------------- *)

	(* ---------------------------------------------------------------------- *)
	(* INITIALIZATION                                                         *)
	(* ---------------------------------------------------------------------- *)
	(* Program initialization *)

	IF (SysFirstLoop) THEN

		(* Define the data exchange areas. *)

		DEDefs[0].NodeID:=1; (* Node ID *)
		DEDefs[0].AutoTxD:=TRUE; (* Auto TxD *)
		DEDefs[0].TxBuffer:=ADR(C1TxBuffer); (* Tx buffer address *)
		DEDefs[0].TxLength:=SIZEOF(C1TxBuffer); (* Tx buffer length *)
		DEDefs[0].RxBuffer:=ADR(C1RxBuffer); (* Rx buffer address *)
		DEDefs[0].RxLength:=SIZEOF(C1RxBuffer); (* Rx buffer length *)
		DEDefs[0].TxHeartbeat:=10; (* Heartbeat send time (S) *)

		(* Define the data exchange areas. *)

		DEDefs[1].NodeID:=2; (* Node ID *)
		DEDefs[1].AutoTxD:=TRUE; (* Auto TxD *)
		DEDefs[1].TxBuffer:=ADR(C2TxBuffer); (* Tx buffer address *)
		DEDefs[1].TxLength:=SIZEOF(C2TxBuffer); (* Tx buffer length *)
		DEDefs[1].RxBuffer:=ADR(C2RxBuffer); (* Rx buffer address *)
		DEDefs[1].RxLength:=SIZEOF(C2RxBuffer); (* Rx buffer length *)
		DEDefs[1].TxHeartbeat:=10; (* Heartbeat send time (S) *)

		(* Server settings. *)

		TCPServer.Enable:=TRUE; (* Server enable *)
		TCPServer.SpyOn:=TRUE; (* Spy command *)
		TCPServer.Connections:=2; (* Accepted connections *)
		TCPServer.Port:=10000; (* Peer port *)
		TCPServer.DEDefs:=ADR(DEDefs); (* Data exchange definitions *)
	END_IF;

	(* ---------------------------------------------------------------------- *)
	(* GESTIONE DATA EXCHANGE SERVER                                          *)
	(* ---------------------------------------------------------------------- *)
	(* Gestione data exchange server. *)

	TCPServer(); (* Eseguo gestione server *)

	(* ---------------------------------------------------------------------- *)
	(* ESEGUO APPOGGIO I/O                                                    *)
	(* ---------------------------------------------------------------------- *)
	(* Eseguo lettura ingressi logici. *)

	DiAcq.Address:=255; (* Module address *)
	DiAcq.Mode:=DI_8_LL; (* Acquisition mode *)
	DiAcq(); (* Digital input acquisition *)
	C1TxBuffer[0]:=TO_BYTE(DiAcq.Value); (* Digital input value *)

	(* Eseguo gestione uscite logiche. *)

	DoMng.Address:=255; (* Module address *)
	DoMng.Mode:=DO_8_LL; (* Management mode *)
	DoMng.Value:=C1RxBuffer[0]; (* Digital ouput value *)
	DoMng.Mask:=16#00000000; (* Output mask *)
	DoMng(); (* Digital output management *)

(* [End of file] *)
]]>
					</sourceCode>
				</program>
			</programs>
			<macros/>
			<structs/>
			<typedefs/>
			<enums/>
			<subranges/>
			<interfaces/>
		</main>
		<target id="Mps054_XTarget_12_0" name="TCPDataExchange.tgt" fullXml="false">
			<![CDATA[(* ************************************************************************** *)
(* Project      : SFW168J000                                                  *)
(* Programmer   : Massimo Piovera                                             *)
(* Date         : 02/10/2015                                                  *)
(* ************************************************************************** *)
(* Alias "ELSIST XTarget 12.0"                                                *)
(* -------------------------------------------------------------------------- *)

(* ************************************************************************** *)
(* VARIABLES                                                                  *)
(* ************************************************************************** *)

VAR_GLOBAL

    {G:"System variables"}
    SysVR               AT %MB0.0 : ARRAY[0..767] OF BYTE;      {DE:"System read only variables"}
    SysClock100         AT %MB0.0 : BOOL;                       {DE:"System clock 100 mS"}
    SysClock1000        AT %MB0.1 : BOOL;                       {DE:"System clock 1000 mS"}
    SysBackupEnd        AT %MB0.2 : BOOL;                       {DE:"System backup end"}
    SysRestoreFault     AT %MB0.3 : BOOL;                       {DE:"System restore fault"}
    SysPLCInRun         AT %MB0.4 : BOOL;                       {DE:"System PLC is running"}
    SysFirstLoop        AT %MB0.5 : BOOL;                       {DE:"System first execution loop"}
    SysLLabCn           AT %MB0.6 : BOOL;                       {DE:"LogicLab connected to the system"}
    SysIsDST            AT %MB0.7 : BOOL;                       {DE:"Is daylight saving time"}
    SysDTSet            AT %MB0.8 : BOOL;                       {DE:"Date/Time set"}
    SysUVSet            AT %MB0.9 : BOOL;                       {DE:"User variables set"}
    SysAlwaysOff        AT %MB0.10 : BOOL;                      {DE:"Always off"}
    SysAlwaysOn         AT %MB0.11 : BOOL;                      {DE:"Always on"}
    SysFFBUspt          AT %MB0.12 : BOOL;                      {DE:"Function or FB unsupported"}
    SysFFBPrt           AT %MB0.13 : BOOL;                      {DE:"Function or FB protected"}
    SysCfgChanged       AT %MB0.14 : BOOL;                      {DE:"System configuration changed"}

    SysActTaskID        AT %MB0.64 : USINT;                     {DE:"System active task ID"}
    SysErActTaskID      AT %MB0.65 : USINT;                     {DE:"System task ID in error"}

    SysModulesReady     AT %MB0.128 : WORD;                     {DE:"Modules connected to Sline bus (bit index)"}
    SysApllVMajor       AT %MB0.130 : UINT;                     {DE:"Application major version number"}
    SysApllVMinor       AT %MB0.132 : UINT;                     {DE:"Application minor version number"}

    SysTBackLpTm        AT %MB0.256 : UDINT;                    {DE:"System Back task loop time (uS)"}
    SysTBackLpTmMin     AT %MB0.260 : UDINT;                    {DE:"System Back task loop time min (uS)"}
    SysTBackLpTmMax     AT %MB0.264 : UDINT;                    {DE:"System Back task loop time max (uS)"}

    SysTBootExTm        AT %MB0.268 : UDINT;                    {DE:"System Boot task execution time (uS)"}
    SysTBootExTmMin     AT %MB0.272 : UDINT;                    {DE:"System Boot task execution time min (uS)"}
    SysTBootExTmMax     AT %MB0.276 : UDINT;                    {DE:"System Boot task execution time max (uS)"}

    SysTFastExTm        AT %MB0.280 : UDINT;                    {DE:"System Fast task execution time (uS)"}
    SysTFastExTmMin     AT %MB0.284 : UDINT;                    {DE:"System Fast task execution time min (uS)"}
    SysTFastExTmMax     AT %MB0.288 : UDINT;                    {DE:"System Fast task execution time max (uS)"}

    SysTSlowExTm        AT %MB0.292 : UDINT;                    {DE:"System Slow task execution time (uS)"}
    SysTSlowExTmMin     AT %MB0.296 : UDINT;                    {DE:"System Slow task execution time min (uS)"}
    SysTSlowExTmMax     AT %MB0.300 : UDINT;                    {DE:"System Slow task execution time max (uS)"}

    SysTBackExTm        AT %MB0.304 : UDINT;                    {DE:"System Back task execution time (uS)"}
    SysTBackExTmMin     AT %MB0.308 : UDINT;                    {DE:"System Back task execution time min (uS)"}
    SysTBackExTmMax     AT %MB0.312 : UDINT;                    {DE:"System Back task execution time max (uS)"}

    SysStartTime        AT %MB0.316 : UDINT;                    {DE:"PLC run since Date/Time [Epoch time]"}
    SysTime             AT %MB0.320 : UDINT;                    {DE:"System time [mS]"}
    SysTFastLpTm        AT %MB0.324 : UDINT;                    {DE:"System Fast task loop time (uS)"}
    SysTSlowLpTm        AT %MB0.328 : UDINT;                    {DE:"System Slow task loop time (uS)"}

    SysApplID           AT %MB0.332 : UDINT;                    {DE:"Application ID"}
    SysMfcCode          AT %MB0.336 : UDINT;                    {DE:"Manufacturer code"}
    SysCustomerCode     AT %MB0.340 : UDINT;                    {DE:"Customer code"}
    SysErCode           AT %MB0.344 : UDINT;                    {DE:"System error code"}
    SysErTime           AT %MB0.348 : UDINT;                    {DE:"System error time"}
    SysSerialNr         AT %MB0.352 : UDINT;                    {DE:"Device serial number"}
    SysApllBTime        AT %MB0.356 : UDINT;                    {DE:"Build time (Epoch)"}
    SysUniqueID         AT %MB0.360 : UDINT;                    {DE:"Unique ID"}
    
    SysPLCUpTime        AT %MB0.364 : UDINT;                    {DE:"PLC up time (S)"}

    SysCode             AT %MB0.512 : STRING[10];               {DE:"Device product code"}
    SysFVersion         AT %MB0.523 : STRING[10];               {DE:"Firmware version"}
    SysErInfos          AT %MB0.534 : STRING[32];               {DE:"System error infos"}
    SysApllName         AT %MB0.567 : STRING[10];               {DE:"Application name"}
    SysUSetA            AT %MB0.578 : STRING[16];               {DE:"User setting (A)"}
    SysUSetB            AT %MB0.595 : STRING[16];               {DE:"User setting (B)"}
    SysUSetC            AT %MB0.612 : STRING[16];               {DE:"User setting (C)"}
    SysUSetD            AT %MB0.629 : STRING[16];               {DE:"User setting (D)"}

    {G:"System variables"}

    SysVRW              AT %MB1.0 : ARRAY[0..639] OF BYTE;      {DE:"System read and write variables"}
    SysTimeInit         AT %MB1.0 : BOOL;                       {DE:"System timing calculation init"}

    SysDateTime         AT %MB1.256 : UDINT;                    {DE:"System current local date time [Epoch time]"}
    SysLastError        AT %MB1.260 : UDINT;                    {DE:"Last error value"}
    SysUTCDateTime      AT %MB1.264 : UDINT;                    {DE:"System current UTC date time [Epoch time]"}

    SysUInfoA           AT %MB1.512 : STRING[16];               {DE:"User info (A)"}
    SysUInfoB           AT %MB1.529 : STRING[16];               {DE:"User info (B)"}
    SysUInfoC           AT %MB1.546 : STRING[16];               {DE:"User info (C)"}
    SysUInfoD           AT %MB1.563 : STRING[16];               {DE:"User info (D)"}

    {G:"User data"}
    SysData             AT %MB100.0 : ARRAY[0..4095] OF BYTE;   {IO:"User data and backup"}
    SysDataBk           AT %MB100.2048 : ARRAY[0..2047] OF BYTE;{IO:"User data backup"}

    {G:"Digital inputs"}
    SysDI00             AT %IX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 00"}
    SysDI01             AT %IX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 01"}
    SysDI02             AT %IX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 02"}
    SysDI03             AT %IX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 03"}
    SysDI04             AT %IX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 04"}
    SysDI05             AT %IX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 05"}
    SysDI06             AT %IX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 06"}
    SysDI07             AT %IX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 07"}
    SysDI08             AT %IX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 08"}
    SysDI09             AT %IX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 09"}
    SysDI10             AT %IX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 10"}
    SysDI11             AT %IX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 11"}
    SysDI12             AT %IX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 12"}
    SysDI13             AT %IX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 13"}
    SysDI14             AT %IX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 14"}
    SysDI15             AT %IX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 15"}

    SysCPUDI            AT %IX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic inputs CPU"}

    {G:"Digital outputs"}
    SysDO00             AT %QX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 00"}
    SysDO01             AT %QX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 01"}
    SysDO02             AT %QX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 02"}
    SysDO03             AT %QX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 03"}
    SysDO04             AT %QX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 04"}
    SysDO05             AT %QX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 05"}
    SysDO06             AT %QX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 06"}
    SysDO07             AT %QX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 07"}
    SysDO08             AT %QX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 08"}
    SysDO09             AT %QX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 09"}
    SysDO10             AT %QX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 10"}
    SysDO11             AT %QX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 11"}
    SysDO12             AT %QX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 12"}
    SysDO13             AT %QX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 13"}
    SysDO14             AT %QX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 14"}
    SysDO15             AT %QX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 15"}

    SysCPUDO            AT %QX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic outputs CPU"}
END_VAR

(* ########################################################################## *)
(* SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Task ID definition                                                         *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Task ID definition"}

    ID_TASK_BOOT : USINT := 0;  {DE:"Boot task ID"}
    ID_TASK_BACK : USINT := 1;  {DE:"Back task ID"}
    ID_TASK_SLOW : USINT := 2;  {DE:"Slow task ID"}
    ID_TASK_FAST : USINT := 3;  {DE:"Fast task ID"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMAlloc" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMAlloc : @USINT

    {DE:"Allocate a memory buffer"}

    VAR_INPUT
        Size : UDINT;           {DE:"Memory size"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMAlloc" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMAlloc : BOOL

    {DE:"Allocate a relocatable memory buffer"}

    VAR_INPUT
        Size    : UDINT;           {DE:"Memory size"}
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMFree" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMFree : BOOL

    {DE:"Disallocate a relocatable memory buffer"}

    VAR_INPUT
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRandom" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRandom : REAL

    {DE:"Get random number"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSysTime" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSysTime : UDINT

    {DE:"Get uSec system time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetTaskLpTime" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetTaskLpTime : BOOL

    {DE:"Set the task loop time"}

    VAR_INPUT
        TaskID : USINT;         {DE:"Task ID"}
        Time   : UDINT;         {DE:"Task time [uSec]"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetLastError : BOOL

    { HIDDEN:ON }
    {DE:"Set the last error"}

    VAR_INPUT
        Error    : UDINT;       {DE:"Error number"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetLastError : UDINT

    {DE:"Get the last error"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetEndianness" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetEndianness : BOOL

    {DE:"Get the endianness"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* TERMIO DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* TermIO definition                                                          *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"TermIO definition"}

    NULL : FILEP := 0;  {DE:"NULL pointer"}
    EOF : INT := -1;    {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* FILEP definition                                                           *)
(* -------------------------------------------------------------------------- *)

TYPE FILEP : UDINT; END_TYPE

(* -------------------------------------------------------------------------- *)
(* "Sysfopen" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfopen : FILEP

    {DE:"Open a file"}

    VAR_INPUT
        FName : STRING[20];     {DE:"File name"}
        Mode  : STRING[4];      {DE:"Attribute"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfclose" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfclose : INT

    {DE:"Close a file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIsOpen" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIsOpen : BOOL

    {DE:"Get the file open status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfgetc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfgetc : INT

    {DE:"Get character from file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfputc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfputc : INT

    {DE:"Put character to file"}

    VAR_INPUT
        Ch   : INT;             {DE:"Character"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfread" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfread : INT

    {DE:"Read data from file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer filled with read data"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfwrite" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfwrite : INT

    {DE:"Write data to file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer of data to write"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIChars" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetIChars" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOSpace" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetOSpace" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIBfClear : BOOL

    {DE:"Clear input buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfClear : BOOL

    {DE:"Clear output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfFlush" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfFlush : BOOL

    {DE:"Flush output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIBfSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRxBSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOBfSize : UDINT

    {DE:"Get output buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetTxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetTxBSize : UDINT

    {DE:"Get Tx buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* FILE SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                           *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* File system definition                                                     *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"FSeek origin definition"}

    ID_SEEK_SET: USINT := 0;  {DE:"Beginning of file"}
    ID_SEEK_CUR: USINT := 1;  {DE:"Current position of the file pointer"}
    ID_SEEK_END: USINT := 2;  {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "Sysrename" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysrename : BOOL

    {DE:"Rename a file"}

    VAR_INPUT
        OldName : STRING[32];   {DE:"File to rename"}
        NewName : STRING[32];   {DE:"New name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysremove" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysremove : BOOL

    {DE:"Remove a file"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File to rename"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfilelength" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfilelength : DINT

    {DE:"Returns the file length"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfseek" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfseek : DINT

    {DE:"Set the file pointer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Offset : DINT;          {DE:"Offset"}
        Origin : INT;           {DE:"Origin"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysDirListing" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDirListing

    {DE:"Directory listing"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Init    : BOOL;         {DE:"Init command"}
        Next    : BOOL;         {DE:"Next command"}
        PathName: STRING[32];   {DE:"Directory name"}
    END_VAR

    VAR_OUTPUT
        Found   : BOOL;         {DE:"File found"}
        Fault   : BOOL;         {DE:"Fault"}
        IsDir   : BOOL;         {DE:"Is directory"}
        Size    : UDINT;        {DE:"File size"}
        Time    : UDINT;        {DE:"File time (UTC)"}
        FileName: STRING[16];   {DE:"File name"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SERIAL DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* SYSSERIALMODE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSSERIALMODE : STRUCT      {DE:"Serial mode"}
        Baudrate : UDINT;       {DE:"Baudrate"}
        Parity : STRING[1];     {DE:"Parity type"}
        DataBits : USINT;       {DE:"Nr of data bits"}
        StopBits : USINT;       {DE:"Nr of stop bits"}
        DTRManagement : USINT;  {DE:"DTR management type"}
        DTRComplement : BOOL;   {DE:"Complement the DTR signal"}
        EchoFlush : BOOL;       {DE:"Flush the echo"}
        DTROnTime : UINT;       {DE:"DTR On wait time"}
        DTROffTime : UINT;      {DE:"DTR Off wait time"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* Serial DTR mode definition                                                 *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Serial mode definition"}

    DTR_OFF : USINT := 0;   {DE:"DTR off"}
    DTR_ON : USINT := 1;    {DE:"DTR on"}
    DTR_AUTO_WO_TIMES : USINT := 2; {DE:"DTR Auto without times"}
    DTR_AUTO_W_TIMES : USINT := 3;  {DE:"DTR Auto with times"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialMode : BOOL

    {DE:"Get serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialMode : BOOL

    {DE:"Set serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialCTS" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialCTS : BOOL

    {DE:"Get serial CTS signal status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialDTR" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialDTR : BOOL

    {DE:"Set serial DTR signal status"}

    VAR_INPUT
        Status : BOOL;          {DE:"DTR status"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSerialPort" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSerialPort

    {DE:"Serial port manager"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Open    : BOOL;         {DE:"Open serial port"}
        COM     : @USINT;       {DE:"COM port"}
        Baudrate: UDINT;        {DE:"Baudrate"}
        Parity  : STRING[1];    {DE:"Parity type"}
        DataBits: USINT;        {DE:"Number of data bits"}
        StopBits: USINT;        {DE:"Number of stop bits"}
        DTRManagement: USINT;   {DE:"DTR management type"}
        DTRComplement: BOOL;    {DE:"DTR signal complement"}
        EchoFlush   : BOOL;     {DE:"Flush the echo characters"}
        DTROnTime   : UINT;     {DE:"DTR on time"}
        DTROffTime  : UINT;     {DE:"DTR off time"}
        FlushTm : UINT;         {DE:"Flush time [mS]"}
        RxSize  : UINT;         {DE:"Rx buffer data size"}
        TxSize  : UINT;         {DE:"Tx buffer data size"}
    END_VAR

    VAR_OUTPUT
        Opened  : BOOL;         {DE:"Serial port was opened"}
        Fault   : BOOL;         {DE:"Fault status"}
        File    : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SCANF AND PRINTF DATA TYPES DEFINITIONS AND FUNCTIONS                      *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Variable types definition"}

    BOOL_TYPE : USINT := 10;    {DE:"Boolean (1 bits)"}

    BYTE_TYPE : USINT := 20;    {DE:"Byte (8 bits)"}
    SINT_TYPE : USINT := 21;    {DE:"Single integer signed (8 bits)"}
    USINT_TYPE : USINT := 22;   {DE:"Single integer unsigned (8 bits)"}

    WORD_TYPE : USINT := 30;    {DE:"Word (16 bits)"}
    INT_TYPE : USINT := 31;     {DE:"Integer signed (16 bits)"}
    UINT_TYPE : USINT := 32;    {DE:"Integer unsigned (16 bits)"}

    DWORD_TYPE : USINT := 40;   {DE:"Double word (32 bits)"}
    DINT_TYPE : USINT := 41;    {DE:"Double integer signed (32 bits)"}
    UDINT_TYPE : USINT := 42;   {DE:"Double integer unsigned (32 bits)"}
    REAL_TYPE : USINT := 43;    {DE:"Floating (32 bits)"}

    STRING_TYPE : USINT := 50;  {DE:"String"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysVarsscanf" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsscanf : BOOL

    {DE:"Extracts values from string"}

    VAR_INPUT
        String : @USINT;        {DE:"String to scan"}
        Format : STRING[80];    {DE:"Scan format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarfprintf" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarfprintf : INT

    {DE:"Variable print to file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarsnprintf" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsnprintf : INT

    {DE:"Variable print to string"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysLWVarsnprintf" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysLWVarsnprintf : INT

    {DE:"Variable print to string with append"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* CODE FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                         *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysPCodeAccept" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPCodeAccept : BOOL

    {DE:"Accept a protection code"}

    VAR_INPUT
        Code : STRING[20];      {DE:"Code"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIDEnabled" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIDEnabled : REAL

    { HIDDEN:ON }
    {DE:"Protected ID enabled"}

    VAR_INPUT
        ID : UINT;              {DE:"ID to check"}
        DTime : UDINT;          {DE:"Demo time"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* I2C BUS TYPES DEFINITIONS AND FUNCTIONS                                    *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysI2CWrRd" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysI2CWrRd : BOOL

    {DE:"Write and read on I2C bus"}

    VAR_INPUT
        Address : USINT;        {DE:"I2c address"}
        WrBytes : USINT;        {DE:"Bytes to write"}
        WrBuffer: @USINT;       {DE:"Write data buffer"}
        RdBytes : USINT;        {DE:"Bytes to read"}
        RdBuffer: @USINT;       {DE:"Read data buffer"}
     END_VAR

    { CODE:EMBEDDED }

END_FUNCTION

(* ########################################################################## *)
(* CAN DATA TYPES DEFINITIONS AND FUNCTIONS                                   *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* CAN bit rate definition                                                    *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"CAN bit rate definition"}

    CAN_50KBIT : USINT := 0;    {DE:"Bit rate 50 Khz"}
    CAN_100KBIT : USINT := 1;   {DE:"Bit rate 100 Khz"}
    CAN_125KBIT : USINT := 2;   {DE:"Bit rate 125 Khz"}
    CAN_250KBIT : USINT := 3;   {DE:"Bit rate 250 Khz"}
    CAN_500KBIT : USINT := 4;   {DE:"Bit rate 500 Khz"}
    CAN_1MBIT : USINT := 5;     {DE:"Bit rate 1 Mhz"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* SYSCANMESSAGE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSCANMESSAGE : STRUCT      {DE:"CAN message"}
        RmReq : BOOL;           {DE:"FALSE:Data frame, TRUE:Remote request"}
        Length : USINT;         {DE:"Data length"}
        MsgID : UDINT;          {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Data : ARRAY[0..7] OF USINT;    {DE:"Message data"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* "SysCANSetMode" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANSetMode : BOOL

    {DE:"Sets the CAN controller mode"}

    VAR_INPUT
        BitRate : USINT;        {DE:"Bit rate"}
        Filter : UDINT;         {DE:"Acceptance filter"}
        Mask : UDINT;           {DE:"Acceptance mask"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIsCANRxTxAv" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIsCANRxTxAv : BOOL

    {DE:"Check if CAN Rx/Tx is available"}

    VAR_INPUT
        Select : BOOL;         {DE:"eFALSE:Rx message selection, eTRUE:Tx space selection"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANRxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANRxMsg : BOOL

    {DE:"Receive a CAN message"}

    VAR_INPUT
        Mask : UDINT;           {DE:"Message ID mask"}
        ID : UDINT;             {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANTxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANTxMsg : BOOL

    {DE:"Send a CAN message"}

    VAR_INPUT
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* IEC EMBEDDED SUPPORT FUNCTION BLOCKS                                       *)
(* ########################################################################## *)

(* ************************************************************************** *)
(* DATE AND TIME FUNCTION BLOCKS                                              *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysETimeToDate" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysETimeToDate

    {DE:"Epoch time to date conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        WeekDay: USINT;         {DE:"WeekDay"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDateToETime" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDateToETime

    {DE:"Date to epoch time conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetUTCDateTime : UDINT

    {DE:"Get the system UTC date time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetUTCDateTime : BOOL

    {DE:"Set the system UTC date time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysTimeZoneAdj" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysTimeZoneAdj : UDINT

    {DE:"Adjust the UTC date time with time zone and daylight saving time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to adjust"}
        TimeZone    : SINT;              {DE:"Difference to Greenwich time (GMT) (H)"}
        DaylightZone: USINT;             {DE:"Daylight saving zone (0=None; 1=Europe; 2=USA"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* UTILITIES                                                                  *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "Sysmemset" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemset : @USINT

    {DE:"Fill a memory area with a character value"}

    VAR_INPUT
        Buff    : @USINT;       {DE:"Memory area"}
        Ch      : INT;          {DE:"Character to set"}
        Size    : UDINT;        {DE:"Number of bytes to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysmemmove" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemmove : @USINT

    {DE:"Copy bytes between two memory areas"}

    VAR_INPUT
        Dest    : @USINT;       {DE:"Destination area"}
        Src     : @USINT;       {DE:"Source area"}
        Size    : UDINT;        {DE:"Number of bytes to copy"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"Find mode"}

    FIND_DEFAULT        : USINT := 16#00;  {DE:"Default find"}
    FIND_FROM_END       : USINT := 16#01;  {DE:"Find from end"}
    FIND_NO_CASE        : USINT := 16#02;  {DE:"Find case insentive"}
    FIND_GET_END        : USINT := 16#04;  {DE:"Return a pointer to end of found"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMemFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMemFind : @USINT

    {DE:"Locate a memory area inside another"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"Memory area where to find"}
        HSize   : UDINT;        {DE:"Haystack area size"}
        Needle  : @USINT;       {DE:"Memory area to find"}
        NSize   : UDINT;        {DE:"Needle area size"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systolower" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systolower : INT

    {DE:"Convert a character to lower case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systoupper" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systoupper : INT

    {DE:"Convert a character to upper case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysstrlen" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysstrlen : UDINT

    {DE:"Calculate length of string"}

    VAR_INPUT
        Str     : @USINT;       {DE:"String"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysStrFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysStrFind : @USINT

    {DE:"Locate a substring inside a string"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"String where to find"}
        Needle  : @USINT;       {DE:"String to find"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"OS variable ID"}

    OSID_CFG_WRITE          : UDINT := 1;   {DE:"Save configuration"}
    
    OSID_ETH0_IP            : UDINT := 100; {DE:"Eth0 IP address"}
    OSID_ETH0_MASK          : UDINT := 101; {DE:"Eth0 network mask"}
    OSID_ETH0_GATEWAY       : UDINT := 102; {DE:"Eth0 gateway"}
    OSID_ETH0_MAC           : UDINT := 103; {DE:"Eth0 MAC address"}
    OSID_ETH0_DNS_PRIM      : UDINT := 104; {DE:"Eth0 primary DNS"}
    OSID_ETH0_DNS_SEC       : UDINT := 105; {DE:"Eth0 secondary DNS"}
    
    OSID_ETH1_IP            : UDINT := 200; {DE:"Eth1 IP address"}
    OSID_ETH1_MASK          : UDINT := 201; {DE:"Eth1 network mask"}
    OSID_ETH1_GATEWAY       : UDINT := 202; {DE:"Eth1 gateway"}
    OSID_ETH1_MAC           : UDINT := 203; {DE:"Eth1 MAC address"}
    OSID_ETH1_LEASED_MAC    : UDINT := 204; {DE:"Eth1 leased MAC address"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysOSIDValue" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysOSIDValue : BOOL

    {DE:"Get or set an operative system variable"}

    VAR_INPUT
        Wr      : BOOL;         {DE:"Write command"}
        OSID    : UDINT;        {DE:"Variable ID"}
        Val     : @USINT;       {DE:"Variable pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetCrc" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCrc

    {DE:"Crc calculation"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Buf   : @USINT;         {DE:"Buffer filled with read data"}
        ByteNr: UINT;           {DE:"Number of byte to calculate"}
        CrcIni: UINT;           {DE:"Crc init value"}
    END_VAR

    VAR_OUTPUT
        Crc : UINT;             {DE:"Calculated Crc"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ************************************************************************** *)
(* CHECK CALCULATION                                                          *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* Check mode definition                                                      *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Check type definitions"}

    CRC_16_MODBUS   : USINT := 1;   {DE:"Modbus RTU CRC"}
    LRC_ISO1155     : USINT := 2;   {DE:"ISO1155 LRC"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetCheck" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetCheck : UDINT

    {DE:"Check calculation"}

    VAR_INPUT
        Buf     : @USINT;       {DE:"Buffer filled with data"}
        ByteNr  : UDINT;        {DE:"Number of bytes to calculate"}
        Init    : UDINT;        {DE:"Init value"}
        Type    : USINT;        {DE:"Check type"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* PERIPHERAL MANAGEMENT FUNCTION BLOCKS                                      *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysPhrInfos" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrInfos : BOOL

    {DE:"Read peripheral module infos"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        InfoID: USINT;          {DE:"Info ID"}
        Info : STRING[10];      {DE:"Info report"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVRd" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVRd : BOOL

    {DE:"Read variable from peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        RdAdd: UINT;            {DE:"Read address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVWr" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVWr : BOOL

    {DE:"Write variable to peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        WrAdd: UINT;            {DE:"Write address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetPhrDI" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital input mode"}

    DI_8_LL : USINT := 1;       {DE:"Read 0-7 input mode"}
    DI_8_L  : USINT := 2;       {DE:"Read 8-15 input mode"}
    DI_8_M  : USINT := 3;       {DE:"Read 16-23 input mode"}
    DI_8_MM : USINT := 4;       {DE:"Read 24-31 input mode"}

    DI_16_L : USINT := 5;       {DE:"Read 0-15 input mode"}
    DI_16_M : USINT := 6;       {DE:"Read 16-31 input mode"}

    DI_32   : USINT := 7;       {DE:"Read 32 input mode"}
    
    DI_I_8_LL : USINT := 11;    {DE:"Read 0-7 immediate input mode"}
    DI_I_8_L  : USINT := 12;    {DE:"Read 8-15 immediate input mode"}
    DI_I_8_M  : USINT := 13;    {DE:"Read 16-23 immediate input mode"}
    DI_I_8_MM : USINT := 14;    {DE:"Read 24-31 immediate input mode"}

    DI_I_16_L : USINT := 15;    {DE:"Read 0-15 immediate input mode"}
    DI_I_16_M : USINT := 16;    {DE:"Read 16-31 immediate input mode"}

    DI_I_32   : USINT := 17;    {DE:"Read 32 immediate input mode"}

END_VAR

FUNCTION_BLOCK SysGetPhrDI

    {DE:"Get the peripheral digital inputs"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : DWORD;        {DE:"Digital input value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPhrDO" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital output mode"}

    DO_8_LL : USINT := 1;       {DE:"Write 0-7 output mode"}
    DO_8_L  : USINT := 2;       {DE:"Write 8-15 output mode"}
    DO_8_M  : USINT := 3;       {DE:"Write 16-23 output mode"}
    DO_8_MM : USINT := 4;       {DE:"Write 24-31 output mode"}

    DO_16_L : USINT := 5;       {DE:"Write 0-15 output mode"}
    DO_16_M : USINT := 6;       {DE:"Write 16-31 output mode"}

    DO_32   : USINT := 7;       {DE:"Write 32 output mode"}
END_VAR

FUNCTION_BLOCK SysSetPhrDO

    {DE:"Set the peripheral digital outputs"}

    VAR
        Ver     : USINT := 1;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : DWORD;        {DE:"Digital output value"}
        Mask    : DWORD;        {DE:"Memory mapped output mask"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetAnInp" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Analog to digital mode"}

    AD_IDLE              : USINT := 16#00;  {DE:"Idle mode"}
    AD_VOLT_0_125_COMMON : USINT := 16#01;  {DE:"0-1.25V common mode"}
    AD_VOLT_0_10_COMMON  : USINT := 16#02;  {DE:"0-10V common mode"}
    AD_CURR_0_20_COMMON  : USINT := 16#03;  {DE:"0-20mA common mode"}
    AD_CURR_4_20_COMMON  : USINT := 16#04;  {DE:"4-20mA common mode"}
    AD_VOLT_0_1_COMMON   : USINT := 16#05;  {DE:"0-1V common mode"}
    AD_CURR_0_20_DIFFER  : USINT := 16#06;  {DE:"0-20mA differential mode"}
    AD_VOLT_0_1_DIFFER   : USINT := 16#07;  {DE:"0-1V differential mode"}
    AD_VOLT_0_125_DIFFER : USINT := 16#08;  {DE:"0-1.25V differential mode"}
    AD_VOLT_0_10_DIFFER  : USINT := 16#09;  {DE:"0-10V differential mode"}
    AD_PT100_DIFFER      : USINT := 16#0A;  {DE:"Pt100 differential mode"}
    AD_PT1000_DIFFER     : USINT := 16#0B;  {DE:"Pt1000 differential mode"}
    AD_NI1000_DIFFER     : USINT := 16#0C;  {DE:"Ni1000 differential mode"}
    AD_CURR_4_20_DIFFER  : USINT := 16#0D;  {DE:"4-20mA differential mode"}
    AD_PT100_DIN_43760   : USINT := 16#20;  {DE:"Pt100 DIN_43760 standard"}
    AD_PT100_AMERICAN    : USINT := 16#21;  {DE:"Pt100 American standard"}
    AD_PT100_ITS_90      : USINT := 16#22;  {DE:"Pt100 ITS-90 standard"}
    AD_PT100_IEC_60751   : USINT := 16#23;  {DE:"Pt100 IEC-60751 standard"}
    AD_PT1000_DIN_43760  : USINT := 16#28;  {DE:"Pt1000 DIN_43760 standard"}
    AD_PT1000_AMERICAN   : USINT := 16#29;  {DE:"Pt1000 American standard"}
    AD_PT1000_ITS_90     : USINT := 16#2A;  {DE:"Pt1000 ITS-90 standard"}
    AD_PT1000_IEC_60751  : USINT := 16#2B;  {DE:"Pt1000 IEC-60751 standard"}
    AD_NI1000_DIN_43760  : USINT := 16#30;  {DE:"Ni1000 DIN_43760 standard"}
    AD_THERMOCOUPLE_B    : USINT := 16#40;  {DE:"Thermocouple B type"}
    AD_THERMOCOUPLE_E    : USINT := 16#41;  {DE:"Thermocouple E type"}
    AD_THERMOCOUPLE_J    : USINT := 16#42;  {DE:"Thermocouple J type"}
    AD_THERMOCOUPLE_K    : USINT := 16#43;  {DE:"Thermocouple K type"}
    AD_THERMOCOUPLE_N    : USINT := 16#44;  {DE:"Thermocouple N type"}
    AD_THERMOCOUPLE_R    : USINT := 16#45;  {DE:"Thermocouple R type"}
    AD_THERMOCOUPLE_S    : USINT := 16#46;  {DE:"Thermocouple S type"}
    AD_THERMOCOUPLE_T    : USINT := 16#47;  {DE:"Thermocouple T type"}
    AD_VIN_VREF_G_1      : USINT := 16#5A;  {DE:"Vin/Vref gain=1"}
    AD_VIN_VREF_G_2      : USINT := 16#5B;  {DE:"Vin/Vref gain=2"}
    AD_VIN_VREF_G_4      : USINT := 16#5C;  {DE:"Vin/Vref gain=4"}
    AD_VIN_VREF_G_8      : USINT := 16#5D;  {DE:"Vin/Vref gain=8"}
    AD_VIN_VREF_G_16     : USINT := 16#5E;  {DE:"Vin/Vref gain=16"}
    AD_VIN_VREF_G_32     : USINT := 16#5F;  {DE:"Vin/Vref gain=32"}
    AD_VIN_VREF_G_64     : USINT := 16#60;  {DE:"Vin/Vref gain=64"}
    AD_VIN_VREF_G_128    : USINT := 16#61;  {DE:"Vin/Vref gain=128"}
    AD_RESISTOR_300_OHM  : USINT := 16#6E;  {DE:"Resistor 0-300 ohm"}
    AD_RESISTOR_5000_OHM : USINT := 16#6F;  {DE:"Resistor 0-5000 ohm"}
    
END_VAR

FUNCTION_BLOCK SysGetAnInp

    {DE:"Get analog input"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : REAL;         {DE:"Value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetAnOut" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital to analog mode"}

    DA_VOLT_0_10         : USINT := 16#01;  {DE:"0-10V"}
    DA_VOLT_0_5          : USINT := 16#02;  {DE:"0-5V"}
    DA_VOLT_M10_10       : USINT := 16#03;  {DE:"+-10V"}
    DA_VOLT_M5_5         : USINT := 16#04;  {DE:"+-5V"}
    DA_CURR_0_20         : USINT := 16#05;  {DE:"0-20mA"}
    DA_CURR_4_20         : USINT := 16#06;  {DE:"4-20mA"}

END_VAR

FUNCTION_BLOCK SysSetAnOut

    {DE:"Set analog output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : REAL;         {DE:"Value"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetCounter" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCounter

    {DE:"Get counter value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode : UDINT;           {DE:"Mode"}
        RCount  : BOOL;         {DE:"Reverse count"}
        Reset  : BOOL;          {DE:"Count reset"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value  : UDINT;         {DE:"Counter value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetEncoder" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetEncoder

    {DE:"Get encoder value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        RCount  : BOOL;         {DE:"Reverse count"}
        ZeroEn  : BOOL;         {DE:"Zero enable"}
        GateEn  : BOOL;         {DE:"Gate enable"}
        RGate   : BOOL;         {DE:"Reverse gate"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ZeroD   : BOOL;         {DE:"Zero pulse detected"}
        GateD   : BOOL;         {DE:"Gate detected"}
        GQuote  : UINT;         {DE:"Gate quote"}
        EQuote  : UINT;         {DE:"Encoder quote"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDMXMng" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDMXMng

    {DE:"DMX protocol management"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Start  : BOOL;          {DE:"Start"}
        File : FILEP;           {DE:"File"}
        Status : USINT;         {DE:"Status byte"}
        Devices : UINT;         {DE:"Number of devices"}
        Delay : UINT;           {DE:"Interframe delay [mSec]"}
        DataPtr : @USINT;       {DE:"Data array pointer"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPWMOut" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSetPWMOut

    {DE:"Set PWM generator output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Frequency : REAL;       {DE:"Frequency (Hz)"}
        Duty    : REAL;         {DE:"Duty cycle (%)"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* NETWORK DATA TYPES DEFINITIONS AND FUNCTIONS                               *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktSend" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysUDPSktSend : INT

    {DE:"Send data to UDP socket"}

    VAR_INPUT
        File    : FILEP;        {DE:"File pointer"}
        TxData  : @USINT;       {DE:"Tx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort    : UINT;     {DE:"Peer port"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIPReach" function block                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysIPReach

    {DE:"Checks if IP is reachable"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Refresh : USINT;        {DE:"Refresh percentage (%)"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSktListen" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSktListen

    {DE:"Set socket in listening"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File"}
        MyIP    : STRING[15];   {DE:"My IP address"}
        MyPort  : UINT;         {DE:"My port"}
        LifeTm  : UINT;         {DE:"Life time (S)"}
        FlushTm : UINT;         {DE:"Flush time (mS)"}
        RxSize  : UINT;         {DE:"Rx data size"}
        TxSize  : UINT;         {DE:"Tx data size"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Connect : BOOL;         {DE:"Socket connect"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktRcv" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPSktRcv

    {DE:"Receive data from UDP socket"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File pointer"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort: UINT;         {DE:"Peer port"}
        RxData  : @USINT;       {DE:"Rx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
        RxSize  : UINT;         {DE:"Received bytes"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPClient

    {DE:"UDP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPServer

    {DE:"UDP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPClient

    {DE:"TCP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPServer

    {DE:"TCP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetIpInfos" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetIpInfos

    {DE:"Get IP infos"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        File     : FILEP;        {DE:"Pointer to file"}
     END_VAR

    VAR_OUTPUT
        PeerIP   : STRING[15];   {DE:"Peer IP address"}
        PeerPort : UINT;         {DE:"Peer port"}
        Status   : DWORD;        {DE:"Connection status"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SPY DATA FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                     *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Spy mode definition"}

    SPY_ASCII : USINT := 1;     {DE:"Ascii mode"}
    SPY_ASCHEX: USINT := 10;    {DE:"Ascii with substitute unprintable chars"}
    SPY_BINARY: USINT := 100;   {DE:"Binary mode (From 100 to 180)"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysSpyData" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSpyData : BOOL

    {DE:"Spy data"}

    VAR_INPUT
        Mode    : USINT;        {DE:"Spy mode"}
        TFlags  : UDINT;        {DE:"Trigger flags"}
        Label   : @USINT;       {DE:"Label pointer"}
        DPtr    : @USINT;       {DE:"Data pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

]]>
		</target>
		<targetXML name="TCPDataExchange.tgtx" fullXml="true">
			<target>
				<resources>
					<resource name="ELS20" processor="ARMv7M">
						<task id="0" name="Fast" type="cyclic" period="1000" descr="Fast task">
							<constraints minPeriod="100" maxPeriod="10000"/>
						</task>
						<task id="1" name="Slow" type="cyclic" period="10000" descr="Slow task">
							<constraints minPeriod="1000" maxPeriod="100000"/>
						</task>
						<task id="2" name="Boot" type="single" period="0" descr="Boot task"/>
						<task id="3" name="Back" period="0" type="cyclic" descr="Background task"/>
					</resource>
				</resources>
			</target>
		</targetXML>
		<libraries>
			<lib version="1.0.0" name="V:\Bertaser\Absolutely Useful\Libraries\eLLabDataExchLib_A500.plclib" fullXml="true" link="false">
				<descr/>
				<libWorkspace>
					<folder name="eLLabDataExchLib_A500">
						<Pou name="_TCPDExchVarSize"/>
						<Pou name="_TCPDataExchServer"/>
						<Pou name="TCPDataExchClient"/>
						<Pou name="TCPDataExchServer"/>
					</folder>
				</libWorkspace>
				<globalVars/>
				<retainVars/>
				<constantVars/>
				<functions>
					<function name="_TCPDExchVarSize" version="1.0.0">
						<descr>(eLabDataExchLib_A500) TCP data exchange returns data structure length (Private)</descr>
						<returnValue>UDINT</returnValue>
						<vars>
							<inputVars>
								<var name="IDx" type="USINT">
									<descr>Data structure index</descr>
								</var>
							</inputVars>
						</vars>
						<iecDeclaration valid="TRUE">
							<![CDATA[]]>
						</iecDeclaration>
						<sourceCode type="ST" encoded="true">
							<![CDATA[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
zjpWKTHx/XTMng==]]>
						</sourceCode>
					</function>
				</functions>
				<functionBlocks>
					<functionBlock name="_TCPDataExchServer" version="1.0.0">
						<descr>(eLabDataExchLib_A500) Receives data from slave (Private)</descr>
						<vars>
							<inputVars>
								<var name="Connections" type="USINT">
									<descr>Accepted connections</descr>
								</var>
								<var name="SpyOn" type="BOOL">
									<descr>Spy active</descr>
								</var>
								<var name="SBSize" type="USINT">
									<descr>Spy buffer size</descr>
								</var>
								<var name="SpyBuffer" type="@BYTE">
									<descr>Spy buffer address (Allocata con SysRMAlloc nel main)</descr>
								</var>
								<var name="DEDefs" type="@TCPDEXCHNODEDEFS">
									<descr>Data exchange node definitions</descr>
								</var>
								<var name="Fp" type="@FILEP">
									<descr>File pointer (Definito per permettere SIZEOF)</descr>
								</var>
								<var name="PDs" type="@_TCPDEXCHDATASTRUCT">
									<descr>Data struct buffer pointer</descr>
								</var>
							</inputVars>
							<outputVars>
								<var name="Fault" type="BOOL">
									<descr>Execution fault</descr>
								</var>
							</outputVars>
							<localVars>
								<var name="i" type="UDINT">
									<descr>Auxiliary variable</descr>
								</var>
								<var name="PDEDefs" type="@TCPDEXCHNODEDEFS">
									<descr>Pointer node definitions</descr>
								</var>
								<var name="Ptr" type="@BYTE" dim0="2">
									<descr>Auxiliary pointer</descr>
								</var>
							</localVars>
						</vars>
						<iecDeclaration valid="TRUE">
							<![CDATA[]]>
						</iecDeclaration>
						<interfaces/>
						<methods/>
						<sourceCode type="ST" encoded="true">
							<![CDATA[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
Z8+XaA==]]>
						</sourceCode>
					</functionBlock>
					<functionBlock name="TCPDataExchClient" version="1.0.0">
						<descr>(eLabDataExchLib_A500) TCP data exchange, acts as a client</descr>
						<vars>
							<inputVars>
								<var name="Enable" type="BOOL">
									<descr>FB enable</descr>
								</var>
								<var name="SpyOn" type="BOOL">
									<descr>Spy active</descr>
								</var>
								<var name="SAddress" type="@USINT">
									<descr>Server address</descr>
								</var>
								<var name="SPort" type="UINT">
									<descr>Server port</descr>
								</var>
								<var name="DEDefs" type="@TCPDEXCHNODEDEFS">
									<descr>Data exchange definitions</descr>
								</var>
							</inputVars>
							<outputVars>
								<var name="Enabled" type="BOOL">
									<descr>FB enabled</descr>
								</var>
								<var name="Fault" type="BOOL">
									<descr>Execution fault</descr>
								</var>
							</outputVars>
							<externalVars>
								<var name="SysActTaskID" type="USINT">
									<descr>Task ID</descr>
								</var>
							</externalVars>
							<localVars>
								<var name="CaseNr" type="USINT">
									<descr>Program cases</descr>
								</var>
								<var name="FHd" type="_TCPDEXCHFRAMEHEADER">
									<descr>Frame header (Definito per permettere SIZEOF)</descr>
								</var>
								<var name="ErrorNr" type="UDINT">
									<descr>Error number</descr>
								</var>
								<var name="i" type="UDINT">
									<descr>Auxiliary variable</descr>
								</var>
								<var name="ISpyOn" type="BOOL">
									<descr>Spy active (Internal)</descr>
								</var>
								<var name="SBSize" type="USINT">
									<descr>Spy buffer size</descr>
									<initValue>128</initValue>
								</var>
								<var name="SpyBuffer" type="@BYTE">
									<descr>Spy buffer address (Allocata con SysRMAlloc)</descr>
								</var>
								<var name="TCPClient" type="SysTCPClient">
									<descr>TCP client</descr>
								</var>
								<var name="TimeBf" type="UDINT" dim0="3">
									<descr>Time buffer (uS)</descr>
								</var>
								<var name="CBuffer" type="@BYTE">
									<descr>Compare buffer (Allocata con SysRMAlloc)</descr>
								</var>
								<var name="TxData" type="BOOL">
									<descr>Tx data send</descr>
								</var>
								<var name="Ptr" type="@BYTE" dim0="2">
									<descr>Auxiliary pointer</descr>
								</var>
								<var name="TxLength" type="UDINT">
									<descr>Tx buffer length</descr>
								</var>
								<var name="Length" type="UDINT">
									<descr>Length calculation</descr>
								</var>
								<var name="TxTCheck" type="BOOL">
									<descr>Tx data time check</descr>
								</var>
							</localVars>
						</vars>
						<iecDeclaration valid="TRUE">
							<![CDATA[]]>
						</iecDeclaration>
						<interfaces/>
						<methods/>
						<sourceCode type="ST" encoded="true">
							<![CDATA[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
R1ceqTNqDxnhYHKc]]>
						</sourceCode>
					</functionBlock>
					<functionBlock name="TCPDataExchServer" version="1.0.0">
						<descr>(eLabDataExchLib_A500) TCP data exchange, acts as a server</descr>
						<vars>
							<inputVars>
								<var name="Enable" type="BOOL">
									<descr>FB enable</descr>
								</var>
								<var name="SpyOn" type="BOOL">
									<descr>Spy active</descr>
								</var>
								<var name="Port" type="UINT">
									<descr>Listening port</descr>
								</var>
								<var name="Connections" type="USINT">
									<descr>Accepted connections</descr>
								</var>
								<var name="DEDefs" type="@TCPDEXCHNODEDEFS">
									<descr>Data exchange node definitions</descr>
								</var>
							</inputVars>
							<outputVars>
								<var name="Enabled" type="BOOL">
									<descr>FB enabled</descr>
								</var>
								<var name="Fault" type="BOOL">
									<descr>Execution fault</descr>
								</var>
							</outputVars>
							<externalVars>
								<var name="SysActTaskID" type="USINT">
									<descr>Task ID</descr>
								</var>
							</externalVars>
							<localVars>
								<var name="i" type="UDINT">
									<descr>Auxiliary variable</descr>
								</var>
								<var name="CMFB" type="_TCPDataExchServer">
									<descr>Connection management FB</descr>
								</var>
								<var name="TCPServer" type="SysTCPServer">
									<descr>TCP server</descr>
								</var>
								<var name="BDs" type="@_TCPDEXCHDATASTRUCT">
									<descr>Data struct buffer (Allocata con SysMAlloc)</descr>
								</var>
								<var name="BFp" type="@FILEP">
									<descr>File pointer buffer (Allocata con SysMAlloc)</descr>
								</var>
								<var name="NDPtr" type="@TCPDEXCHNODEDEFS">
									<descr>Node definitions pointer</descr>
								</var>
								<var name="IDx" type="USINT">
									<descr>Node definitions index</descr>
								</var>
							</localVars>
						</vars>
						<iecDeclaration valid="TRUE">
							<![CDATA[]]>
						</iecDeclaration>
						<interfaces/>
						<methods/>
						<sourceCode type="ST" encoded="true">
							<![CDATA[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]]>
						</sourceCode>
					</functionBlock>
				</functionBlocks>
				<programs/>
				<macros/>
				<structs>
					<struct name="_TCPDEXCHDATASTRUCT" version="1.0.0">
						<descr>(eLabDataExchLib_A500) TCP data exchange data structure (Private)</descr>
						<vars>
							<var name="TCPConnect" type="BOOL">
								<descr>TCP connect (Connessione TCP attiva)</descr>
							</var>
							<var name="CNConnect" type="BOOL">
								<descr>Client node connect (Ricevuto frame da client)</descr>
							</var>
							<var name="TxData" type="BOOL">
								<descr>Tx data send</descr>
							</var>
							<var name="TxTCheck" type="BOOL">
								<descr>Tx data time check</descr>
							</var>
							<var name="CaseNr" type="USINT">
								<descr>Program cases</descr>
							</var>
							<var name="Dummy" type="BYTE" dim0="3"/>
							<var name="TimeBf" type="UDINT" dim0="3">
								<descr>Time buffer</descr>
							</var>
							<var name="TxLength" type="UDINT">
								<descr>Tx buffer length</descr>
							</var>
							<var name="Length" type="UDINT">
								<descr>Length calculation</descr>
							</var>
							<var name="ErrorNr" type="UDINT">
								<descr>Error number</descr>
							</var>
							<var name="CBuffer" type="@BYTE">
								<descr>Compare buffer (Allocata con SysRMAlloc)</descr>
							</var>
							<var name="PDEDefs" type="@TCPDEXCHNODEDEFS">
								<descr>Pointer node definitions (Valorizzato alla connessione client)</descr>
							</var>
							<var name="FHd" type="_TCPDEXCHFRAMEHEADER">
								<descr>Data frame header (Definito per permettere SIZEOF)</descr>
							</var>
						</vars>
					</struct>
					<struct name="_TCPDEXCHFRAMEHEADER" version="1.0.0">
						<title>Header frame scambio dati</title>
						<descr>(eLabDataExchLib_A500) Message header data structure (Private</descr>
						<vars>
							<var name="NodeID" type="USINT">
								<descr>Node identifier</descr>
							</var>
							<var name="Heartbeat" type="USINT">
								<descr>Heartbeat time (S)</descr>
							</var>
							<var name="Dummy" type="BYTE" dim0="4"/>
							<var name="Length" type="UINT">
								<descr>Message length</descr>
							</var>
						</vars>
					</struct>
					<struct name="TCPDEXCHNODEDEFS" version="1.0.0">
						<descr>(eLabDataExchLib_A500) Buffer definitions structure</descr>
						<vars>
							<var name="NodeID" type="USINT">
								<descr>[W] Node ID</descr>
							</var>
							<var name="AutoTxD" type="BOOL">
								<descr>[W]  Automatic Tx data send</descr>
							</var>
							<var name="TxData" type="BOOL">
								<descr>[W] Tx data send</descr>
							</var>
							<var name="Active" type="BOOL">
								<descr>[R] Data exchange active</descr>
							</var>
							<var name="RxOk" type="BOOL">
								<descr>[R] Rx data Ok</descr>
							</var>
							<var name="TxHeartbeat" type="USINT">
								<descr>[W] Tx heartbeat time (S)</descr>
							</var>
							<var name="RxHeartbeat" type="USINT">
								<descr>[R] Rx heartbeat time (S)</descr>
							</var>
							<var name="Dummy" type="BYTE"/>
							<var name="RxBuffer" type="@BYTE">
								<descr>[W] Rx buffer address</descr>
							</var>
							<var name="RxLength" type="UDINT">
								<descr>[W] Rx buffer length</descr>
							</var>
							<var name="TxBuffer" type="@BYTE">
								<descr>[W] Tx buffer address</descr>
							</var>
							<var name="TxLength" type="UDINT">
								<descr>[W] Tx buffer length</descr>
							</var>
							<var name="RxPackets" type="UDINT">
								<descr>[R] Rx packets</descr>
							</var>
							<var name="TxPackets" type="UDINT">
								<descr>[R] Tx packets</descr>
							</var>
							<var name="TxTime" type="REAL">
								<descr>[R] Transmission time</descr>
							</var>
							<var name="CErrors" type="UDINT">
								<descr>[R] Communication errors</descr>
							</var>
						</vars>
					</struct>
				</structs>
				<typedefs/>
				<enums/>
				<subranges/>
				<interfaces/>
			</lib>
		</libraries>
		<aux>
			<src fullXml="false" name="HMIsManager.PLC" order="0" hidden="false">
				<![CDATA[]]>
			</src>
		</aux>
		<workspace>
			<root name="TCPDataExchange" nextID="141">
				<folder name="POUs" id="1">
					<Pou name="ST_TCPDEClient" id="36"/>
					<Pou name="ST_TCPDEServer" id="116"/>
				</folder>
				<GlobalVars name="Variables" id="9"/>
				<GlobalVars name="Ungrouped_Global_Vars" id="21"/>
			</root>
		</workspace>
	</sources>
	<codegen crossReference="false" crossReferenceOptions="0x3000001D" listing="true" hideSourceCodeInListing="true" saveEXPFile="true" saveTargetFiles="false" warningEnable="true" symMap="true" checkIndexType="false" waitExtension="false" allocateUnusedVariables="false" checkArrayBounds="false" checkDivisionByZero="false" checkPointers="false" checkReferences="false" checkInterfaces="false" customTargetBINFileName="TCPDataExchange.bin" customTargetTSCFileName="TCPDataExchange_source.bin" customTargetTDSFileName="TCPDataExchange_debug.bin" generateCustomFilesName="false">
		<disabledWarnings/>
		<applicationDataBlocks/>
	</codegen>
	<simWorkspaces/>
	<debug watchRefresh="20" watchVarRefresh="0" watchMaxArray="20" autoSaveWatchList="false"/>
	<editor useOldGridSize="false"/>
	<userDef>
		<release>Xtarget</release>
		<author/>
		<note/>
		<version/>
		<password disabled="true"/>
	</userDef>
	<downloadSequence sourceCode="never" debugSymbols="onPLCApplicationDownload"/>
	<commands>
		<postbuild/>
		<postdown/>
		<predown/>
	</commands>
	<resources>
		<configuration template="LogicLab.pct" version="1">
			<data protocol="root">
				<project_config nextID="0">
					<datacomment/>
				</project_config>
				<Mps054_XTarget_12_0 template="Elsist\Plc\Mps054_XTarget_12_0.pct" version="1" name="SlimLine Mps054 XTarget" caption="SlimLine Mps054 XTarget">
					<config>
						<elsist_hmis/>
					</config>
				</Mps054_XTarget_12_0>
			</data>
		</configuration>
	</resources>
</plcProject>